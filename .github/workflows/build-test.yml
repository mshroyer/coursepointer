name: build-test
on:
  workflow_call:
    inputs:
      os:
        description: "Operating system to run on"
        required: true
        type: string
      toolchain:
        description: "Rust toolchain version"
        required: true
        type: string
      default_features:
        description: "Whether to use default crate features"
        required: false
        type: boolean
        default: true
      extra_features:
        description: "Additional crate features to use, comma-separated"
        required: false
        type: string

jobs:
  build_and_test:
    runs-on: ${{ inputs.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/
            ~/.cargo/
            ~/.rustup/
            .venv/
            target/
          key: build_and_test-${{ inputs.toolchain }}-${{ runner.os }}

      - name: Setup rust
        if: inputs.toolchain != 'stable'  # Runner already comes with the stable toolchain
        run: rustup toolchain install --profile minimal ${{ inputs.toolchain }} && rustup default ${{ inputs.toolchain }}

      - name: Print rust version
        run: rustc --version

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Setup uv
        uses: astral-sh/setup-uv@v5

      - run: cargo build --verbose
      - run: cargo test --verbose
      - run: uv run --package integration pytest
